source [find interface/stlink-v2.cfg]
source [find target/stm32f4x.cfg]
proc memread32 {ADDR} {
    set foo(0) 0
    if ![ catch { mem2array foo 32 $ADDR 1  } msg ] {
        return $foo(0)
    } else {
        error "memread32: $msg"
    }
}

proc memwrite32 {ADDR DATA} {
    set foo(0) $DATA
    if ![ catch { array2mem foo 32 $ADDR 1  } msg ] {
        return $foo(0)
    } else {
        error "memwrite32: $msg"
    }
}

init

#exit

set flash_sr 0x40023C18
set flash_optcr 0x40023C14
set flash_optkeyr 0x40023C08

reset halt

# This instead of removing the lock, seems to lock the device
# which forces the stm32f2x unlock to do a full device erase
if 1 {
set optcr [memread32 $flash_optcr]
puts [format "Curr: %x" $optcr]
#memwrite32 $flash_optcr [expr $optcr | 1]
memwrite32 $flash_optkeyr 0x08192a3b
memwrite32 $flash_optkeyr 0x4c5d6e7f
memwrite32 $flash_optcr 0x0FFFAAEC
set optcr [memread32 $flash_optcr]
puts [format "Curr: %x" $optcr]
memwrite32 $flash_optcr [expr $optcr | 2]
resume
sleep 100
puts "All written!"
reset halt
}

if 1 {
set optcr [memread32 $flash_optcr]
puts [format "OPTCR: %x" $optcr]
stm32f2x unlock 0
reset halt
}

set optcr [memread32 $flash_optcr]
puts [format "Curr: %x" $optcr]

program build/braingames_revb_bl/braingames_revb_bl.elf verify reset exit
